---
# installation epel pour fail2ban
- name: install epel gpg key
  rpm_key: "key={{ item }} state=present"
  with_items:
    - "http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6"

- name: install epel repository
  command: "rpm -Uvh --force {{ item.href }} creates={{ item.creates }}"
  with_items:
    - {
      href: "http://mirror.iprimus.com.au/epel/6/i386/epel-release-6-8.noarch.rpm",
      creates: "/etc/yum.repos.d/epel.repo"
    }

# obligatoire pour selinux et ansible
- name: install libselinux for python
  yum: name=libselinux-python state=latest

# installation de paquets utiles
- name: install ntp package
  yum: name=ntp state=latest
  notify: restart ntpd

- name: install ntpdate
  yum: name=ntpdate state=latest
  notify: enable ntpdate

- name: install vim-enhanced
  yum: name=vim-enhanced state=latest

- name: install man
  yum: name=man state=latest

- name: install bind-utils
  yum: name=bind-utils state=latest

- name: install yum-utils
  yum: name=yum-utils state=latest

- name: install fail2ban
  yum: name=fail2ban state=latest
  notify: restart fail2ban

- name: copy some scripts in /etc/profile.d
  copy: src={{ item }} dest=/etc/profile.d owner=root mode=0644
  with_items:
    - autologout.sh
    - history_date.sh

- name: check that ntp is running
  service: name=ntpd state=started

- name: check that ntpdate is enable
  service: name=ntpdate enabled=yes

# security changes
- name: change default root password
  user: name=root password={{ password_root }}
  tags: init_root_password

- name: create user for sysadmin task
  user: name={{ name_sysdeploy }} password={{ password_sysdeploy }}
  tags: init_sysdeploy

- name: copy ssh public key on user we just create
  authorized_key:
    user={{ name_sysdeploy }}
    key="{{ lookup('file', item) }}"
    state=present
  with_fileglob:
    - add_keys/*
  tags:
    - init_sysdeploy
    - addkey_sysdeploy

# task to remove key
- name: remove ssh public key on sysdeploy
  authorized_key:
    user={{ name_sysdeploy }}
    key="{{ lookup('file', item) }}"
    state=absent
  with_fileglob:
    - remove_keys/*
  tags: removekey_sysdeploy

- name: disable root login on sshd
  lineinfile: dest=/etc/ssh/sshd_config regexp='^PermitRootLogin' line="PermitRootLogin no" state=present
  when: disable_rootlogin
  notify: restart sshd






